#!/usr/bin/python2.7
#r = requests.get(config.url + "false")
#r = requests.get(config.url + "true " + str(counter))
import requests
import time
from pytz import timezone
from datetime import datetime, timedelta
from hosted import device, node, config
config.restart_on_update()


def send_data():
    url = config.db
    headers = {
        'Content-Type': 'application/json',
        "x-apikey": config.api
    }
    data = {
        "device_id": config.metadata['device_id'],
        "day": datetime.now(tz).strftime("%m/%d/%Y"),
        "hour": datetime.now(tz).strftime('%H:%M:%S'),
        "motion": counter,
    }
    req = requests.post(url, json=data, headers=headers)
    if config.debug is True:
        r = requests.get(config.url + str(req) + str(counter) + str(datetime.now(tz).strftime('%H:%M:%S')) + str(datetime.now(tz).strftime("%m/%d/%Y")))


counter = 0
tz = timezone(config.timezone)
device.gpio.monitor(config.pin)
for (pin, state) in device.gpio.poll_forever():
    if state is True:
        counter = 1
        node.send('/counter:%d' % counter)
        send_data()
        time.sleep(10)
